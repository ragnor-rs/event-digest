# Event Digest Configuration Example
# Copy this file to config.yaml and customize for your needs

# Telegram groups to monitor
# Formats supported:
#   - @username (public groups with username)
#   - username (public groups, @ is optional)
#   - "Display Name" (private groups - searches your joined groups by name)
groupsToParse:
  - "@example_tech_chat"        # Public group with @ prefix
  - "local_events_group"         # Public group without @ prefix
  - "My Private Group"           # Private group (searched by display name)

# Telegram channels to monitor
# Formats supported:
#   - @username (public channels with username)
#   - username (public channels, @ is optional)
#   - "Display Name" (private channels - searches your joined channels by name)
channelsToParse:
  - "@city_announcements"        # Public channel with @ prefix
  - "cultural_events_channel"    # Public channel without @ prefix
  - "Private Event Channel"      # Private channel (searched by display name)

# Your interests - events will be matched against these topics
userInterests:
  - "Technology"
  - "Cooking"
  - "Photography"
  - "Board games"
  - "Music"

# Weekly availability timeslots
# Format: "DAY_OF_WEEK TIME" where DAY_OF_WEEK is 0-6 (0=Sunday, 6=Saturday)
# Events must start at or after the specified time on that day
weeklyTimeslots:
  - "6 14:00"  # Saturday after 14:00
  - "0 14:00"  # Sunday after 14:00

# Optional: Timestamp to fetch messages after (ISO format)
# lastGenerationTimestamp: "2024-01-15T10:00:00.000Z"

# Optional: Maximum number of messages to fetch from groups
# Groups typically have more conversational noise, so need more messages
# Default: 200 (when only maxChannelMessages is specified)
#          300 (when both limits unspecified, calculated via GROUP_MESSAGE_MULTIPLIER=1.5)
# maxGroupMessages: 200

# Optional: Maximum number of messages to fetch from channels
# Channels are more focused, so fewer messages needed
# Default: 100
# maxChannelMessages: 100

# Optional: Legacy parameter for backward compatibility
# maxInputMessages: 100

# Optional: Filter for offline events only (default: true)
# When enabled, excludes virtual events, webinars, and online-only events
# Hybrid events (both online and offline options) are always included
# Set to false to include online events
# skipOnlineEvents: true

# Optional: Write debug files (default: false)
# When enabled, writes detailed debug files to debug/ directory
# Files include: event_classification.json, interest_matching.json, schedule_filtering.json
# writeDebugFiles: false

# Optional: Verbose logging (default: false)
# When enabled, prints detailed processing information including:
# - Cache processing details
# - Processing batch numbers
# - Individual DISCARDED messages with links
# - Event creation status
# When disabled, only prints step names and final statistics
# verboseLogging: false

# Optional: Minimum confidence threshold for interest matching (default: 0.75)
# GPT assigns confidence scores (0.0-1.0) to each interest match
# Only matches with confidence >= this threshold are included
# Higher values (0.8-0.9) = fewer but more certain matches
# Lower values (0.5-0.7) = more matches but may include questionable ones
# Recommended: 0.75 for balanced precision/recall
# minInterestConfidence: 0.75

# Optional: AI batch sizes for processing (defaults shown)
# Controls how many items are processed in each AI API call
# Larger batches are faster but may reduce accuracy
# eventDetectionBatchSize: 16      # Step 3: Event detection
# eventClassificationBatchSize: 16 # Step 4: Event type classification
# scheduleExtractionBatchSize: 16  # Step 5: Schedule extraction
# eventDescriptionBatchSize: 5     # Step 7: Event description generation

# Optional: Custom event message cues (words that indicate event announcements)
# If not specified, built-in cues will be used
# eventMessageCues:
#   ru:
#     - "сентябр"
#     - "сегодня"
#     - "часов"
#     - "завтра"
#     - "послезавтра"
#     - "январ"
#     - "феврал"
#     - "март"
#     - "апрел"
#     - "мая"
#     - "июн"
#     - "июл"
#     - "август"
#     - "октябр"
#     - "ноябр"
#     - "декабр"
#     - "понедельник"
#     - "вторник"
#     - "сред"
#     - "четверг"
#     - "пятниц"
#     - "суббот"
#     - "воскресень"
#   en:
#     - "january"
#     - "february"
#     - "march"
#     - "april"
#     - "may"
#     - "june"
#     - "july"
#     - "august"
#     - "september"
#     - "october"
#     - "november"
#     - "december"
#     - "tonight"
#     - "tomorrow"
#     - "today"
#     - "monday"
#     - "tuesday"
#     - "wednesday"
#     - "thursday"
#     - "friday"
#     - "saturday"
#     - "sunday"

# Custom GPT prompt for event detection (optional)
# Identifies which messages are single event announcements
#
# PLACEHOLDER:
#   {{MESSAGES}} - numbered list: "1. text\n\n2. text"
#
# REQUIRED OUTPUT:
#   Message numbers (one per line) or "none"
#   Example: "1\n3\n7" or "none"
#
# EXAMPLE PROMPT:
# eventDetectionPrompt: |
#   Which messages announce a single specific event with date/time?
#   {{MESSAGES}}
#   Respond with message numbers (one per line) or "none".

# Custom GPT prompt for interest matching (optional)
# Matches events to user interests with confidence scores
#
# PLACEHOLDERS:
#   {{EVENTS}} - numbered list: "0: event text\n1: event text"
#   {{INTERESTS}} - numbered list: "0: interest name\n1: interest name"
#
# REQUIRED OUTPUT:
#   Interest matches with confidence: "INTEREST_INDEX:CONFIDENCE, INTEREST_INDEX:CONFIDENCE"
#   Example: "19:0.95, 6:0.85" or "none"
#
# EXAMPLE PROMPT:
# interestMatchingPrompt: |
#   Match events to interests with confidence scores (0.0-1.0).
#   EVENTS:
#   {{EVENTS}}
#   INTERESTS:
#   {{INTERESTS}}
#   Format: INDEX:CONFIDENCE, INDEX:CONFIDENCE
#   Example: 19:0.95, 6:0.70
#   If no matches: none

# Custom GPT prompt for event type classification (optional)
# Classifies events as offline (0), online (1), or hybrid (2)
#
# PLACEHOLDER:
#   {{MESSAGES}} - numbered list: "1. text\n\n2. text"
#
# REQUIRED OUTPUT:
#   Message classifications: "MESSAGE_NUMBER: INDEX"
#   Indices: 0=offline, 1=online, 2=hybrid
#   Example: "1: 0\n2: 1\n3: 2"
#
# EXAMPLE PROMPT:
# eventTypeClassificationPrompt: |
#   Classify events: 0=offline (physical location), 1=online (virtual only), 2=hybrid (both).
#   {{MESSAGES}}
#   Format: MESSAGE_NUMBER: INDEX

# Custom GPT prompt for schedule/datetime extraction (optional)
# Extracts event start date and time from messages
#
# PLACEHOLDERS:
#   {{TODAY_DATE}} - current date (e.g., "Mon Oct 07 2025")
#   {{MESSAGES}} - numbered list with timestamps: "1. [Posted: date] text"
#
# REQUIRED OUTPUT:
#   Datetime per message: "MESSAGE_NUMBER: DD MMM YYYY HH:MM"
#   Example: "1: 08 Oct 2025 19:30"
#   If unknown: "MESSAGE_NUMBER: unknown"
#
# EXAMPLE PROMPT:
# scheduleExtractionPrompt: |
#   Extract start datetime for each event. Today is {{TODAY_DATE}}.
#   {{MESSAGES}}
#   Format: MESSAGE_NUMBER: DD MMM YYYY HH:MM
#   Example: 1: 15 Oct 2025 20:00

# Custom GPT prompt for event description generation (optional)
# Converts event messages into structured titles and summaries
#
# PLACEHOLDER:
#   {{EVENTS}} - numbered list with metadata: "1. Start time: ... Interests: ... Content: ... Link: ..."
#
# REQUIRED OUTPUT:
#   Structured format per event:
#   "MESSAGE_NUMBER:
#   TITLE: [title]
#   SUMMARY: [summary]
#   DESCRIPTION: [description]"
#
# EXAMPLE PROMPT:
# eventDescriptionPrompt: |
#   Convert events to English titles and summaries.
#   {{EVENTS}}
#   Format:
#   MESSAGE_NUMBER:
#   TITLE: [catchy title]
#   SUMMARY: [1-2 sentences, no dates/times]
#   DESCRIPTION: [full description]
